@{
    Layout = "~/Views/Shared/Sidebar/_AdminLayout.cshtml";
    ViewData["Title"] = "Aid Preparation";
}

<!-- Bootstrap 5 CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<!-- Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

<style>
    * {
        font-family: 'Poppins', sans-serif;
    }

    :root {
        --primary-color: #2c5f2d;
        --secondary-color: #97bc62;
        --accent-color: #ffd700;
        --text-dark: #333;
        --text-light: #666;
        --bg-light: #f8f9fa;
        --modal-bg: rgba(151, 188, 98, 0.1);
    }

    .page-header {
        margin-bottom: 2rem;
    }

    .page-title {
        font-size: 2.2rem;
        font-weight: 700;
        color: var(--primary-color);
        margin-bottom: 0.5rem;
    }

    .page-subtitle {
        color: var(--text-light);
        font-size: 1.1rem;
    }

    .table-container {
        background: white;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .table {
        margin-bottom: 0;
        border-collapse: separate;
        border-spacing: 0;
    }

        .table thead th {
            background: linear-gradient(135deg, var(--secondary-color) 0%, var(--primary-color) 100%);
            color: white;
            font-weight: 600;
            padding: 1rem;
            border: none;
            text-align: left;
        }

        .table tbody td {
            padding: 1rem;
            vertical-align: middle;
            border-bottom: 1px solid #eee;
        }

        .table tbody tr:last-child td {
            border-bottom: none;
        }

        .table tbody tr:hover {
            background-color: rgba(151, 188, 98, 0.1);
        }

    .urgency-badge {
        padding: 0.35rem 0.65rem;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.85rem;
    }

    .badge-low {
        background-color: rgba(151, 188, 98, 0.2);
        color: #2c5f2d;
    }

    .badge-medium {
        background-color: rgba(255, 193, 7, 0.2);
        color: #b8860b;
    }

    .badge-high {
        background-color: rgba(220, 53, 69, 0.2);
        color: #dc3545;
    }

    .status-badge {
        padding: 0.35rem 0.65rem;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.85rem;
    }

    .badge-pending {
        background-color: rgba(255, 193, 7, 0.2);
        color: #b8860b;
    }

    .badge-progress {
        background-color: rgba(13, 110, 253, 0.2);
        color: #0d6efd;
    }

    .badge-completed {
        background-color: rgba(25, 135, 84, 0.2);
        color: #198754;
    }

    .btn-action {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.9rem;
        transition: all 0.3s;
        border: 1px solid var(--secondary-color);
        background-color: transparent;
        color: var(--primary-color);
    }

        .btn-action:hover {
            background-color: var(--secondary-color);
            color: white;
        }

    .btn-disabled {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.9rem;
        background-color: #6c757d;
        color: white;
        border: none;
        cursor: not-allowed;
    }

    /* Modal styling with light green background */
    .modal-content {
        background-color: var(--secondary-color);
      
    }

    .volunteer-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem;
        border-bottom: 1px solid rgba(151, 188, 98, 0.2);
    }

    .volunteer-info {
        flex: 1;
    }

    .volunteer-name {
        font-weight: 600;
        color: var(--primary-color);
    }

    .volunteer-center {
        font-size: 0.85rem;
        color: var(--text-light);
    }

    .btn-join {
        background-color: var(--secondary-color);
        color: white;
        border: none;
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-size: 0.8rem;
        transition: all 0.3s;
    }

        .btn-join:hover {
            background-color: var(--primary-color);
        }

    .btn-joined {
        background-color: #6c757d;
        color: white;
        border: none;
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-size: 0.8rem;
        cursor: not-allowed;
    }

    .form-control {
        padding: 10px 14px;
        border-radius: 8px;
        border: 1px solid #ddd;
        transition: all 0.3s;
        background-color: white;
    }

        .form-control:focus {
            border-color: var(--secondary-color);
            box-shadow: 0 0 0 0.25rem rgba(151, 188, 98, 0.25);
        }
</style>

<div class="container-fluid py-4">
    <div class="page-header">
        <h1 class="page-title">Aid Preparation</h1>
        <p class="page-subtitle">Manage aid preparations and assign volunteers</p>
    </div>

    <!-- Preparation Table -->
    <div class="table-container">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Request Type</th>
                        <th scope="col">Description</th>
                        <th scope="col" class="text-center">Urgency Level</th>
                        <th scope="col" class="text-center">People Affected</th>
                        <th scope="col" class="text-center">Status</th>
                        <th scope="col" class="text-center">Action</th>
                    </tr>
                </thead>
                <tbody id="preparationTableBody">
                    <tr data-status="Completed" data-tracking="true">
                        <td>Rescue</td>
                        <td>Family trapped in flooded building needs immediate evacuation</td>
                        <td class="text-center"><span class="urgency-badge badge-high">High</span></td>
                        <td class="text-center">4</td>
                        <td class="text-center"><span class="status-badge badge-completed">Completed</span></td>
                        <td class="text-center">
                            <button class="btn-disabled" disabled>
                                Tracking Completed
                            </button>
                        </td>
                    </tr>
                    <tr data-status="Completed" data-tracking="false">
                        <td>Aid</td>
                        <td>Need food and water supplies for 10 people</td>
                        <td class="text-center"><span class="urgency-badge badge-medium">Medium</span></td>
                        <td class="text-center">10</td>
                        <td class="text-center"><span class="status-badge badge-completed">Completed</span></td>
                        <td class="text-center">
                            <button class="btn-action" data-prep-id="2">
                                Send Volunteers to Help
                            </button>
                        </td>
                    </tr>
                    <tr data-status="In Progress" data-tracking="false">
                        <td>Rescue</td>
                        <td>Elderly person needs assistance relocating to safer area</td>
                        <td class="text-center"><span class="urgency-badge badge-low">Low</span></td>
                        <td class="text-center">1</td>
                        <td class="text-center"><span class="status-badge badge-progress">In Progress</span></td>
                        <td class="text-center">
                            <span class="text-muted">Ongoing</span>
                        </td>
                    </tr>
                    <tr data-status="Completed" data-tracking="false">
                        <td>Aid</td>
                        <td>Urgent need for medical supplies and first aid kits</td>
                        <td class="text-center"><span class="urgency-badge badge-high">High</span></td>
                        <td class="text-center">15</td>
                        <td class="text-center"><span class="status-badge badge-completed">Completed</span></td>
                        <td class="text-center">
                            <button class="btn-action" data-prep-id="4">
                                Send Volunteers to Help
                            </button>
                        </td>
                    </tr>
                    <tr data-status="Completed" data-tracking="false">
                        <td>Aid</td>
                        <td>Request for blankets and warm clothing for displaced families</td>
                        <td class="text-center"><span class="urgency-badge badge-medium">Medium</span></td>
                        <td class="text-center">8</td>
                        <td class="text-center"><span class="status-badge badge-completed">Completed</span></td>
                        <td class="text-center">
                            <button class="btn-action" data-prep-id="5">
                                Send Volunteers to Help
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Timing Modal -->
<div class="modal fade" id="timingModal" tabindex="-1" aria-labelledby="timingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="timingModalLabel">Set Timing Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-4">
                    <label for="departureTime" class="form-label">Departure Time</label>
                    <input type="datetime-local" class="form-control" id="departureTime">
                </div>
                <div class="mb-4">
                    <label for="estimatedArrival" class="form-label">Estimated Arrival</label>
                    <input type="datetime-local" class="form-control" id="estimatedArrival">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="addVolunteersBtn">Add Volunteers to Rescue</button>
            </div>
        </div>
    </div>
</div>

<!-- Volunteers Modal -->
<div class="modal fade" id="volunteersModal" tabindex="-1" aria-labelledby="volunteersModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="volunteersModalLabel">Available Volunteers</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="volunteersList" class="max-h-96 overflow-y-auto">
                    <!-- Volunteers will be populated here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="doneBtn">Done</button>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Get elements
        const tableBody = document.getElementById('preparationTableBody');
        const timingModal = new bootstrap.Modal(document.getElementById('timingModal'));
        const volunteersModal = new bootstrap.Modal(document.getElementById('volunteersModal'));
        const volunteersList = document.getElementById('volunteersList');
        const addVolunteersBtn = document.getElementById('addVolunteersBtn');
        const doneBtn = document.getElementById('doneBtn');
        const departureTimeInput = document.getElementById('departureTime');
        const estimatedArrivalInput = document.getElementById('estimatedArrival');

        // Set current datetime as default for the inputs
        const now = new Date();
        const formattedNow = now.toISOString().slice(0, 16);
        departureTimeInput.value = formattedNow;
        estimatedArrivalInput.value = formattedNow;

        // Sample volunteers data
        const volunteers = [
            { id: 1, name: "John Volunteer", center: "Downtown Relief Center" },
            { id: 2, name: "Jane Helper", center: "Northside Aid Station" },
            { id: 3, name: "Robert Assistant", center: "Westwood Shelter" },
            { id: 4, name: "Sarah Aidworker", center: "Riverside Assistance Center" },
            { id: 5, name: "Michael Rescuer", center: "Mountain View Relief" },
            { id: 6, name: "Emily Support", center: "Downtown Relief Center" },
            { id: 7, name: "David Helper", center: "Northside Aid Station" }
        ];

        let currentPreparationId = null;
        let joinedVolunteers = [];

        // Populate volunteers modal
        function populateVolunteers() {
            volunteersList.innerHTML = '';

            volunteers.forEach(volunteer => {
                const isJoined = joinedVolunteers.includes(volunteer.id);

                const volunteerItem = document.createElement('div');
                volunteerItem.className = 'volunteer-item';

                volunteerItem.innerHTML = `
                    <div class="volunteer-info">
                        <div class="volunteer-name">${volunteer.name}</div>
                        <div class="volunteer-center">${volunteer.center}</div>
                    </div>
                    ${isJoined ?
                        `<button class="btn-joined" disabled>Joined</button>` :
                        `<button class="btn-join" data-volunteer-id="${volunteer.id}">Join Rescue Team</button>`
                    }
                `;

                volunteersList.appendChild(volunteerItem);
            });

            // Add event listeners to Join buttons
            document.querySelectorAll('.btn-join').forEach(button => {
                button.addEventListener('click', function() {
                    const volunteerId = this.getAttribute('data-volunteer-id');
                    joinRescueTeam(volunteerId);
                });
            });
        }

        // Join rescue team function
        function joinRescueTeam(volunteerId) {
            // In a real application, you would make an API call here
            joinedVolunteers.push(parseInt(volunteerId));

            // Update the button to show "Joined"
            const joinButton = document.querySelector(`.btn-join[data-volunteer-id="${volunteerId}"]`);
            if (joinButton) {
                joinButton.outerHTML = '<button class="btn-joined" disabled>Joined</button>';
            }

            // Show success message
            alert(`Volunteer has joined the rescue team for preparation #${currentPreparationId}`);
        }

        // Event listeners for action buttons
        document.querySelectorAll('.btn-action').forEach(button => {
            button.addEventListener('click', function() {
                currentPreparationId = this.getAttribute('data-prep-id');
                timingModal.show();
            });
        });

        // Add Volunteers button click handler
        addVolunteersBtn.addEventListener('click', function() {
            const departureTime = departureTimeInput.value;
            const estimatedArrival = estimatedArrivalInput.value;

            if (!departureTime || !estimatedArrival) {
                alert('Please fill in both departure time and estimated arrival');
                return;
            }

            // In a real application, you would make an API call here
            alert(`Timing details set for preparation #${currentPreparationId}\nDeparture: ${departureTime}\nArrival: ${estimatedArrival}`);

            timingModal.hide();
            populateVolunteers();
            volunteersModal.show();
        });

        // Done button click handler
        doneBtn.addEventListener('click', function() {
            // In a real application, you would make an API call here
            alert(`Rescue team setup completed for preparation #${currentPreparationId}`);

            volunteersModal.hide();

            // Update the button in the table to show "Tracking Completed"
            const actionButton = document.querySelector(`.btn-action[data-prep-id="${currentPreparationId}"]`);
            if (actionButton) {
                actionButton.outerHTML = '<button class="btn-disabled" disabled>Tracking Completed</button>';
            }

            // Reset for next time
            currentPreparationId = null;
            joinedVolunteers = [];
        });

        // Reset joined volunteers when modal is closed
        document.getElementById('volunteersModal').addEventListener('hidden.bs.modal', function () {
            joinedVolunteers = [];
        });
    });
</script>