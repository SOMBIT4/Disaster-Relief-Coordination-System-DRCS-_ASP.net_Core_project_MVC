@{
    Layout = "~/Views/Shared/Sidebar/_AdminLayout.cshtml";
    ViewData["Title"] = "Aid Requests";
}

<!-- Bootstrap 5 CSS -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">
<!-- Google Fonts -->
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">

<style>
    * {
        font-family: 'Poppins', sans-serif;
    }

    :root {
        --primary-color: #2c5f2d;
        --secondary-color: #97bc62;
        --accent-color: #ffd700;
        --text-dark: #333;
        --text-light: #666;
        --bg-light: #f8f9fa;
        --modal-bg: rgba(151, 188, 98, 0.1);
    }

    .page-header {
        margin-bottom: 2rem;
    }

    .page-title {
        font-size: 2.2rem;
        font-weight: 700;
        color: var(--primary-color);
        margin-bottom: 0.5rem;
    }

    .page-subtitle {
        color: var(--text-light);
        font-size: 1.1rem;
    }

    .filter-section {
        background: white;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        padding: 1.5rem;
        margin-bottom: 2rem;
    }

    .filter-title {
        font-size: 1.2rem;
        font-weight: 600;
        color: var(--primary-color);
        margin-bottom: 1rem;
        padding-bottom: 0.5rem;
        border-bottom: 2px solid var(--secondary-color);
    }

    .form-label {
        font-weight: 600;
        color: var(--text-dark);
        margin-bottom: 8px;
    }

    .form-control, .form-select {
        padding: 10px 14px;
        border-radius: 8px;
        border: 1px solid #ddd;
        transition: all 0.3s;
    }

        .form-control:focus, .form-select:focus {
            border-color: var(--secondary-color);
            box-shadow: 0 0 0 0.25rem rgba(151, 188, 98, 0.25);
        }

        .form-select option:hover,
        .form-select option:focus,
        .form-select option:active,
        .form-select option:checked {
            background-color: var(--secondary-color) !important;
            color: white !important;
        }

    .table-container {
        background: white;
        border-radius: 12px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.08);
        overflow: hidden;
        margin-bottom: 2rem;
    }

    .table {
        margin-bottom: 0;
        border-collapse: separate;
        border-spacing: 0;
    }

        .table thead th {
            background: linear-gradient(135deg, var(--secondary-color) 0%, var(--primary-color) 100%);
            color: white;
            font-weight: 600;
            padding: 1rem;
            border: none;
            text-align: left;
        }

        .table tbody td {
            padding: 1rem;
            vertical-align: middle;
            border-bottom: 1px solid #eee;
        }

        .table tbody tr:last-child td {
            border-bottom: none;
        }

        .table tbody tr:hover {
            background-color: rgba(151, 188, 98, 0.1);
        }

    .urgency-badge {
        padding: 0.35rem 0.65rem;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.85rem;
    }

    .badge-low {
        background-color: rgba(151, 188, 98, 0.2);
        color: #2c5f2d;
    }

    .badge-medium {
        background-color: rgba(255, 193, 7, 0.2);
        color: #b8860b;
    }

    .badge-high {
        background-color: rgba(220, 53, 69, 0.2);
        color: #dc3545;
    }

    .status-badge {
        padding: 0.35rem 0.65rem;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.85rem;
    }

    .badge-pending {
        background-color: rgba(255, 193, 7, 0.2);
        color: #b8860b;
    }

    .badge-progress {
        background-color: rgba(13, 110, 253, 0.2);
        color: #0d6efd;
    }

    .badge-completed {
        background-color: rgba(25, 135, 84, 0.2);
        color: #198754;
    }

    .pagination-container {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 2rem;
    }

    .page-link {
        padding: 0.5rem 1rem;
        border: 1px solid var(--secondary-color);
        color: var(--primary-color);
        border-radius: 8px;
        margin: 0 0.25rem;
        transition: all 0.3s;
    }

        .page-link:hover {
            background: linear-gradient(135deg, var(--secondary-color) 0%, var(--primary-color) 100%);
            color: white;
            border-color: var(--primary-color);
        }

    .page-item.active .page-link {
        background: linear-gradient(135deg, var(--secondary-color) 0%, var(--primary-color) 100%);
        color: white;
        border-color: var(--primary-color);
    }

    .page-item.disabled .page-link {
        color: #6c757d;
        border-color: #dee2e6;
        background-color: white;
    }

    .search-icon {
        position: absolute;
        right: 12px;
        top: 50%;
        transform: translateY(-50%);
        color: var(--text-light);
    }

    .btn-primary-custom {
        background: linear-gradient(135deg, var(--secondary-color) 0%, var(--primary-color) 100%);
        border: none;
        color: white;
        padding: 10px 20px;
        font-weight: 600;
        border-radius: 8px;
        transition: all 0.3s;
    }

        .btn-primary-custom:hover {
            background: linear-gradient(135deg, var(--primary-color) 0%, #234f24 100%);
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(44, 95, 45, 0.4);
            color: white;
        }

    .btn-reset {
        background: transparent;
        border: 1px solid var(--secondary-color);
        color: var(--primary-color);
        padding: 10px 20px;
        font-weight: 600;
        border-radius: 8px;
        transition: all 0.3s;
    }

        .btn-reset:hover {
            background: rgba(151, 188, 98, 0.1);
            border-color: var(--primary-color);
        }

    .highlight {
        background-color: rgba(151, 188, 98, 0.2) !important;
        transition: background-color 0.3s ease;
    }

    .action-buttons {
        display: flex;
        gap: 0.5rem;
        justify-content: center;
    }

    .btn-action {
        padding: 0.35rem 0.65rem;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.85rem;
        transition: all 0.3s;
        border: 1px solid var(--secondary-color);
        background-color: transparent;
        color: var(--primary-color);
    }

        .btn-action:hover {
            background-color: var(--secondary-color);
            color: white;
        }

    /* Modal styling with light green background */
    .modal-content {
        background-color: var(--secondary-color);
        
    }

    .loader-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 200px;
    }

    .volunteer-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem;
        border-bottom: 1px solid rgba(151, 188, 98, 0.2);
    }

    .volunteer-info {
        flex: 1;
    }

    .volunteer-name {
        font-weight: 600;
        color: var(--primary-color);
    }

    .volunteer-center {
        font-size: 0.85rem;
        color: var(--text-light);
    }

    .btn-ask {
        background-color: darkgreen;
        color: white;
        border: none;
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-size: 0.8rem;
        transition: all 0.3s;
    }

        .btn-ask:hover {
            background-color: var(--primary-color);
        }

    .btn-asked {
        background-color: #6c757d;
        color: white;
        border: none;
        padding: 0.4rem 0.8rem;
        border-radius: 20px;
        font-size: 0.8rem;
        cursor: not-allowed;
    }
</style>

<div class="container-fluid py-4">
    <div class="page-header">
        <h1 class="page-title">All Aid Requests</h1>
        <p class="page-subtitle">View and manage all aid requests in the system</p>
    </div>

    <!-- Filters, Sorting, and Search Controls -->
    <div class="filter-section">
        <h3 class="filter-title">Filter & Search Requests</h3>
        <div class="row">
            <div class="col-md-3 mb-3">
                <label class="form-label">Request Type</label>
                <select id="typeFilter" class="form-select">
                    <option value="all">All Types</option>
                    <option value="Rescue">Rescue</option>
                    <option value="Aid">Aid</option>
                </select>
            </div>
            <div class="col-md-2 mb-3">
                <label class="form-label">Urgency Level</label>
                <select id="urgencyFilter" class="form-select">
                    <option value="all">All Levels</option>
                    <option value="Low">Low</option>
                    <option value="Medium">Medium</option>
                    <option value="High">High</option>
                </select>
            </div>
            <div class="col-md-2 mb-3">
                <label class="form-label">Status</label>
                <select id="statusFilter" class="form-select">
                    <option value="all">All Statuses</option>
                    <option value="Pending">Pending</option>
                    <option value="In Progress">In Progress</option>
                    <option value="Completed">Completed</option>
                </select>
            </div>
            <div class="col-md-3 mb-3">
                <label class="form-label">Search by Description or Name</label>
                <div class="position-relative">
                    <input type="text" id="search" class="form-control" placeholder="Search requests...">
                    <i class="bi bi-search search-icon"></i>
                </div>
            </div>
            <div class="col-md-2 mb-3 d-flex align-items-end">
                <button id="applyFilters" class="btn btn-primary-custom w-100 me-2">Apply</button>
                <button id="resetFilters" class="btn btn-reset">Reset</button>
            </div>
        </div>
    </div>

    <!-- Requests Table -->
    <div class="table-container">
        <div class="table-responsive">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col" class="text-center">#</th>
                        <th scope="col">Requester Name</th>
                        <th scope="col">Contact Info</th>
                        <th scope="col">Request Type</th>
                        <th scope="col">Description</th>
                        <th scope="col" class="text-center">Urgency Level</th>
                        <th scope="col" class="text-center">Status</th>
                        <th scope="col" class="text-center">Actions</th>
                    </tr>
                </thead>
                <tbody id="requestsTableBody">
                    <tr data-type="Rescue" data-urgency="High" data-status="Pending" data-date="2025-09-01">
                        <td class="text-center">1</td>
                        <td>John Doe</td>
                        <td>john@example.com</td>
                        <td>Rescue</td>
                        <td>Family trapped in flooded building needs immediate evacuation</td>
                        <td class="text-center"><span class="urgency-badge badge-high">High</span></td>
                        <td class="text-center"><span class="status-badge badge-pending">Pending</span></td>
                        <td class="text-center">
                            <button class="btn-action" data-request-id="1">
                                Ask Volunteers
                            </button>
                        </td>
                    </tr>
                    <tr data-type="Aid" data-urgency="Medium" data-status="In Progress" data-date="2025-09-04">
                        <td class="text-center">2</td>
                        <td>Jane Smith</td>
                        <td>555-1234</td>
                        <td>Aid</td>
                        <td>Need food and water supplies for 10 people</td>
                        <td class="text-center"><span class="urgency-badge badge-medium">Medium</span></td>
                        <td class="text-center"><span class="status-badge badge-progress">In Progress</span></td>
                        <td class="text-center">
                            <button class="btn-action" data-request-id="2">
                                Ask Volunteers
                            </button>
                        </td>
                    </tr>
                    <tr data-type="Rescue" data-urgency="Low" data-status="Completed" data-date="2025-09-03">
                        <td class="text-center">3</td>
                        <td>Robert Johnson</td>
                        <td>robert@example.com</td>
                        <td>Rescue</td>
                        <td>Elderly person needs assistance relocating to safer area</td>
                        <td class="text-center"><span class="urgency-badge badge-low">Low</span></td>
                        <td class="text-center"><span class="status-badge badge-completed">Completed</span></td>
                        <td class="text-center">
                            <button class="btn-asked" disabled>
                                Preparation completed
                            </button>
                        </td>
                    </tr>
                    <tr data-type="Aid" data-urgency="High" data-status="Pending" data-date="2025-08-28">
                        <td class="text-center">4</td>
                        <td>Sarah Williams</td>
                        <td>444-9876</td>
                        <td>Aid</td>
                        <td>Urgent need for medical supplies and first aid kits</td>
                        <td class="text-center"><span class="urgency-badge badge-high">High</span></td>
                        <td class="text-center"><span class="status-badge badge-pending">Pending</span></td>
                        <td class="text-center">
                            <button class="btn-action" data-request-id="4">
                                Ask Volunteers
                            </button>
                        </td>
                    </tr>
                    <tr data-type="Aid" data-urgency="Medium" data-status="In Progress" data-date="2025-08-25">
                        <td class="text-center">5</td>
                        <td>Michael Brown</td>
                        <td>michael@example.com</td>
                        <td>Aid</td>
                        <td>Request for blankets and warm clothing for displaced families</td>
                        <td class="text-center"><span class="urgency-badge badge-medium">Medium</span></td>
                        <td class="text-center"><span class="status-badge badge-progress">In Progress</span></td>
                        <td class="text-center">
                            <button class="btn-action" data-request-id="5">
                                Ask Volunteers
                            </button>
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Pagination -->
    <div class="pagination-container">
        <nav aria-label="Requests pagination">
            <ul class="pagination">
                <li class="page-item disabled">
                    <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
                </li>
                <li class="page-item active" aria-current="page">
                    <a class="page-link" href="#">1</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#">2</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#">3</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>
    </div>
</div>

<!-- Volunteers Modal -->
<div class="modal fade" id="volunteersModal" tabindex="-1" aria-labelledby="volunteersModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="volunteersModalLabel">Available Volunteers</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div id="volunteersList" class="max-h-96 overflow-y-auto">
                    <!-- Volunteers will be populated here -->
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Get elements
        const typeFilter = document.getElementById('typeFilter');
        const urgencyFilter = document.getElementById('urgencyFilter');
        const statusFilter = document.getElementById('statusFilter');
        const searchInput = document.getElementById('search');
        const applyButton = document.getElementById('applyFilters');
        const resetButton = document.getElementById('resetFilters');
        const tableBody = document.getElementById('requestsTableBody');
        const rows = tableBody.querySelectorAll('tr');
        const volunteersModal = new bootstrap.Modal(document.getElementById('volunteersModal'));
        const volunteersList = document.getElementById('volunteersList');

        // Store original rows for resetting
        const originalRows = Array.from(rows);
        let currentRequestId = null;
        let askedVolunteers = [];

        // Sample volunteers data
        const volunteers = [
            { id: 1, name: "John Volunteer", center: "Downtown Relief Center" },
            { id: 2, name: "Jane Helper", center: "Northside Aid Station" },
            { id: 3, name: "Robert Assistant", center: "Westwood Shelter" },
            { id: 4, name: "Sarah Aidworker", center: "Riverside Assistance Center" },
            { id: 5, name: "Michael Rescuer", center: "Mountain View Relief" }
        ];

        // Apply filters function
        function applyFilters() {
            const typeValue = typeFilter.value;
            const urgencyValue = urgencyFilter.value;
            const statusValue = statusFilter.value;
            const searchTerm = searchInput.value.toLowerCase();

            // First, show all rows
            rows.forEach(row => {
                row.style.display = '';
                row.classList.remove('highlight');
            });

            // Apply type filter
            if (typeValue !== 'all') {
                rows.forEach(row => {
                    const rowType = row.getAttribute('data-type');
                    if (rowType !== typeValue) {
                        row.style.display = 'none';
                    }
                });
            }

            // Apply urgency filter
            if (urgencyValue !== 'all') {
                rows.forEach(row => {
                    if (row.style.display !== 'none') {
                        const rowUrgency = row.getAttribute('data-urgency');
                        if (rowUrgency !== urgencyValue) {
                            row.style.display = 'none';
                        }
                    }
                });
            }

            // Apply status filter
            if (statusValue !== 'all') {
                rows.forEach(row => {
                    if (row.style.display !== 'none') {
                        const rowStatus = row.getAttribute('data-status');
                        if (rowStatus !== statusValue) {
                            row.style.display = 'none';
                        }
                    }
                });
            }

            // Apply search filter
            if (searchTerm) {
                rows.forEach(row => {
                    if (row.style.display !== 'none') {
                        const requesterName = row.cells[1].textContent.toLowerCase();
                        const description = row.cells[4].textContent.toLowerCase();

                        if (requesterName.includes(searchTerm) || description.includes(searchTerm)) {
                            row.classList.add('highlight');
                        } else {
                            row.style.display = 'none';
                        }
                    }
                });
            }
        }

        // Reset filters function
        function resetFilters() {
            typeFilter.value = 'all';
            urgencyFilter.value = 'all';
            statusFilter.value = 'all';
            searchInput.value = '';

            // Show all rows and remove highlights
            rows.forEach(row => {
                row.style.display = '';
                row.classList.remove('highlight');
            });

            // Restore original order
            originalRows.forEach(row => {
                tableBody.appendChild(row);
            });
        }

        // Populate volunteers modal
        function populateVolunteers(requestId) {
            volunteersList.innerHTML = '';

            volunteers.forEach(volunteer => {
                const isAsked = askedVolunteers.includes(volunteer.id);

                const volunteerItem = document.createElement('div');
                volunteerItem.className = 'volunteer-item';

                volunteerItem.innerHTML = `
                    <div class="volunteer-info">
                        <div class="volunteer-name">${volunteer.name}</div>
                        <div class="volunteer-center">${volunteer.center}</div>
                    </div>
                    ${isAsked ?
                        `<button class="btn-asked" disabled>Asked</button>` :
                        `<button class="btn-ask" data-volunteer-id="${volunteer.id}">Ask to Make Prep</button>`
                    }
                `;

                volunteersList.appendChild(volunteerItem);
            });

            // Add event listeners to Ask buttons
            document.querySelectorAll('.btn-ask').forEach(button => {
                button.addEventListener('click', function() {
                    const volunteerId = this.getAttribute('data-volunteer-id');
                    askVolunteer(volunteerId);
                });
            });
        }

        // Ask volunteer function
        function askVolunteer(volunteerId) {
            // In a real application, you would make an API call here
            askedVolunteers.push(parseInt(volunteerId));

            // Update the button to show "Asked"
            const askButton = document.querySelector(`.btn-ask[data-volunteer-id="${volunteerId}"]`);
            if (askButton) {
                askButton.outerHTML = '<button class="btn-asked" disabled>Asked</button>';
            }

            // Show success message
            alert(`Volunteer has been asked to prepare aid for request #${currentRequestId}`);
        }

        // Event listeners for action buttons
        document.querySelectorAll('.btn-action').forEach(button => {
            button.addEventListener('click', function() {
                currentRequestId = this.getAttribute('data-request-id');
                populateVolunteers(currentRequestId);
                volunteersModal.show();
            });
        });

        // Event listeners
        applyButton.addEventListener('click', applyFilters);
        resetButton.addEventListener('click', resetFilters);

        // Also apply filters when search input changes
        searchInput.addEventListener('keyup', function() {
            applyFilters();
        });

        // Apply filters when dropdowns change
        typeFilter.addEventListener('change', applyFilters);
        urgencyFilter.addEventListener('change', applyFilters);
        statusFilter.addEventListener('change', applyFilters);
    });
</script>