<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"] - DRCS</title>

    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
</head>
<body>
    <!-- Header / Navbar -->
    <header>
        <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
            <div class="container-fluid">
                <a class="navbar-brand" href="/">DRCS</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarNav">
                    <!-- Guest Links -->
                    <ul id="guest-links" class="navbar-nav ms-auto" style="display: none !important;">
                        <li class="nav-item"><a class="btn btn-outline-light me-2" href="/">Home</a></li>
                        <li class="nav-item"><a class="btn btn-outline-light me-2" href="/AuthApi/Login">Sign In</a></li>
                        <li class="nav-item"><a class="btn btn-outline-info" href="/home/about">About Us</a></li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <!-- Page Content -->
    <main class="container mt-4">
        @RenderBody()
    </main>

    <!-- Footer -->
    <footer class="bg-dark text-white text-center py-3 mt-5">
        <p>&copy; @DateTime.Now.Year - DRCS. All rights reserved.</p>
    </footer>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Navbar dynamic script -->
    <script>
        document.addEventListener('DOMContentLoaded', async function() {
            const currentPath = window.location.pathname.toLowerCase();
            const guestLinks = document.getElementById('guest-links');

            // Initially hide guest links with !important
            guestLinks.style.setProperty('display', 'none', 'important');

            try {
                const res = await fetch('/api/auth/me', {
                    method: 'GET',
                    credentials: 'include'
                });

                console.log('Response status:', res.status);

                if (res.ok) {
                    const data = await res.json();
                    console.log('Auth response data:', data);

                    // Check if user is authenticated
                    if (data && (data.userId || data.id || data.user)) {
                        // User is logged in
                        guestLinks.style.setProperty('display', 'none', 'important');
                        guestLinks.classList.remove('d-flex');
                        localStorage.setItem("userRole", data.role || data.userRole || 'user');
                        console.log('User is logged in, hiding guest links');

                        // Redirect if on login/register pages
                        if (currentPath === '/authapi/login' || currentPath === '/authapi/register') {
                            const userRole = data.role || data.userRole || 'user';
                            window.location.href = `/Dashboard/${userRole}`;
                        }
                    } else {
                        // User is not logged in - show guest links
                        guestLinks.style.setProperty('display', 'flex', 'important');
                        guestLinks.classList.add('d-flex');
                        localStorage.removeItem("userRole");
                        console.log('User is not logged in, showing guest links');
                    }
                } else {
                    // Response not OK (401, 403, etc.) - user not authenticated
                    guestLinks.style.setProperty('display', 'flex', 'important');
                    guestLinks.classList.add('d-flex');
                    localStorage.removeItem("userRole");
                    console.log('Auth check failed with status:', res.status);
                }
            } catch (err) {
                console.error('Auth check failed:', err);
                // Fallback: show guest links if auth check fails
                guestLinks.style.setProperty('display', 'flex', 'important');
                guestLinks.classList.add('d-flex');
                localStorage.removeItem("userRole");
            }
        });
    </script>

    <!-- Render page-specific scripts -->
    @RenderSection("Scripts", required: false)

</body>
</html>